server {
	listen              443 ssl;
	ssl_certificate     /etc/nginx/srv-ygg-ds.crt;
	ssl_certificate_key /etc/nginx/srv-ygg-ds.key;
	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers         HIGH:!aNULL:!MD5;
	root /var/www/html;
}

server {
	listen              443 ssl;
	ssl_certificate     /etc/nginx/srv-ygg-ds.crt;
	ssl_certificate_key /etc/nginx/srv-ygg-ds.key;
	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers         HIGH:!aNULL:!MD5;
	server_name protected.srv.ygg.ds;
	
	location /authelia {
	    internal;
	    set $upstream_authelia http://127.0.0.1:9091/api/verify;
	    proxy_pass_request_body off;
	    proxy_pass $upstream_authelia;
	    proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
	    proxy_set_header Content-Length "";

	    # Timeout if the real server is dead
	    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

	    # Basic Proxy Config
	    client_body_buffer_size 128k;
	    proxy_set_header Host $host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $remote_addr;
	    proxy_set_header X-Forwarded-Proto $scheme;
	    proxy_set_header X-Forwarded-Host $http_host;
	    proxy_set_header X-Forwarded-Uri $request_uri;
	    proxy_set_header X-Forwarded-Ssl on;
	    proxy_redirect  http://  $scheme://;
	    proxy_http_version 1.1;
	    proxy_set_header Connection "";
	    proxy_cache_bypass $cookie_session;
	    proxy_no_cache $cookie_session;
	    proxy_buffers 4 32k;

	    # Advanced Proxy Config
	    send_timeout 5m;
	    proxy_read_timeout 240;
	    proxy_send_timeout 240;
	    proxy_connect_timeout 240;
	}
    location / {
        root /var/www/protected;
        
	auth_request /authelia;
	auth_request_set $target_url $scheme://$http_host$request_uri;
	auth_request_set $user $upstream_http_remote_user;
	auth_request_set $groups $upstream_http_remote_groups;
	proxy_set_header Remote-User $user;
	proxy_set_header Remote-Groups $groups;
	error_page 401 =302 http://auth.srv.ygg.ds/?rd=$target_url;
    }
}

server {
	listen              443 ssl;
	ssl_certificate     /etc/nginx/srv-ygg-ds.crt;
	ssl_certificate_key /etc/nginx/srv-ygg-ds.key;
	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers         HIGH:!aNULL:!MD5;
	server_name auth.srv.ygg.ds;

    location / {
        add_header X-Forwarded-Host auth.srv.ygg.ds;
        add_header X-Forwarded-Proto $scheme;
        set $upstream_authelia http://127.0.0.1:9091;
        proxy_pass $upstream_authelia;
	
	client_body_buffer_size 128k;

	#Timeout if the real server is dead
	proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

	# Advanced Proxy Config
	send_timeout 5m;
	proxy_read_timeout 360;
	proxy_send_timeout 360;
	proxy_connect_timeout 360;

	# Basic Proxy Config
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Forwarded-Host $http_host;
	proxy_set_header X-Forwarded-Uri $request_uri;
	proxy_set_header X-Forwarded-Ssl on;
	proxy_redirect  http://  $scheme://;
	proxy_http_version 1.1;
	proxy_set_header Connection "";
	proxy_cache_bypass $cookie_session;
	proxy_no_cache $cookie_session;
	proxy_buffers 64 256k;

	# If behind reverse proxy, forwards the correct IP
	set_real_ip_from 10.0.0.0/8;
	set_real_ip_from 172.0.0.0/8;
	set_real_ip_from 192.168.0.0/16;
	set_real_ip_from fc00::/7;
	real_ip_header X-Forwarded-For;
	real_ip_recursive on;
    }
}